'''
08/29/2022

Q: The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?

A: 76576500

'''

# Checking three different numbers - total amount of Divisors, the triangle number, and the number to add to the triangle number
totalDivs = 0
triangleNum = 0
naturalNum = 1

# Loop until the totalDivs is greater than 500
while totalDivs < 500:
    # Create new triangle number
    triangleNum += naturalNum
    naturalNum += 1

    # Create a list of all divisors
    listOfDivs = []
    if triangleNum%2 == 0:
        # Only check up to the square root, and then just add the divosor and the product that goes with it
        for i in range(1, int(triangleNum**0.5) + 1):
            if triangleNum%i == 0:
                listOfDivs.append(i) 
                listOfDivs.append(triangleNum/i)
    # Save new Div length so loop can check whether or not to break 
    totalDivs = len(listOfDivs)

print(triangleNum)